1. IntelliJ 실행    - 상단메뉴 -> [파일] -> [프로젝트 닫기]
2. [ 새 프로젝트 ]
	JAVA프로젝트 선택
	1. 이름 : tj2025A_web1(아무거나)
	2. 위치 : 바탕화면(아무곳이나)
		-> Git 저장소 생성 [x]체크안함
	3. 시스템빌드 : Gradle
		-> Gradle : 외부라이브러리 설치/세팅을 자동으로 해주는 소프트웨어
	4. JDK : 17
	5. Gradle : Groovy
	[생성]
3. Gradle 프로젝트 폴더구조
	.src폴더
	-> main폴더
	-> -> java폴더
4. 그레이들 프로젝트 환경에서 "MYSQL연동" 라이브러리 와 Spring 설치
	0. 접속 : https://start.spring.io/
	--왼쪽 화면--
	1. project : Gradle - Groovy
	2. Language : java
	3. Spring Boot : 3.5.4
	4. Project Metadata : 프로젝트 부가 정보[기본값]
	5. Packaging : Jar
	6. Java: 17
	--오른쪽 화면--
	7.  Dependencies( 프로젝트에 설치할 라이브러리 )
		1. [ Add dependencies... ] 클릭
		2-1. mysql 검색후 --> [MySQL Driver SQL] 선택
		2-2. Spring 검색후 --> [Spring Web Web ] 선택
    --하단에 화면--
	8. [ EXPLORE ] 클릭
		1. build.gradle 코드 복사후 내 프로젝트내 'build.gradle' 파일에 붙여넣기
		2. 오른쪽 상단에 코끼리(아이콘)새로고침 클릭 후

5. 웹 환경 설정
    1. AppStart 클래스 위에 @SpringBootApplication
    2. AppStart 클래스 내 main함수 안에서
        - SpringApplication.run( 현재클래스명.class);
        예] SpringApplication.run( AppStart.class);
    확인 : AppStart 클래스 실행후 브라우저에서 http://localhost:8080/ 접속
        " Whitelabel Error Page " : 문구가 나오면 정상
        " 사이트에 연결할 수 없음 " : 스프링 서버가 꺼져 있는 상태
    3. Dao 코드 유지 하고 Controller 클래스
    3-1 Controller 클래스명 위에 @RestController
    3-1 각 기능 메소드위에
        -저장 메소드(boardWrite) 위에 @PostMapping
        -조회 메소드(boardPrint) 위에 @GetMapping

제출 : 카카오톡방에 192.168.40.185:8080 주소 제출
컴퓨터 아이피 확인 : CMD -> ipconfig -> IPv4 주소 확인

[스프링 실행방법]
1. 폴더내 AppStart 클래스 생성
2. 클래스 위에 @SpringBootApplication
    --> 자동완성이 안될경우 : 그레이들 설정 안된상태
3. main 메소드 안에서
    SpringApplication.run( 현재클래스명.class );
4. 스프링 실행 전체코드
@SpringBootApplication
public class AppStart {
    public static void main(String[] args) {
        SpringApplication.run( AppStart.class );
    }
}
5. 스프링 실행
    주의할점 : console창에서 서버상태 혹은 복수실행 상태 확인.

6. 확인 : http://localhost:8080/
    정상화면 : Whitelabel Error Page
    비정상화면 :사이트에 연결할 수 없음

[ 스프링 ]
    1. 정의 : 스프링은 자바 기반의 엔터프라이즈 급 애플리케이션 개발을 위한 프레임워크
    2. 활용처 : 전자정부프레임워크( 대한민국 개발 표준 )
    3. 특징 : IOC/DI 객체의존성, AOP 로직분리 모듈(레고)화, MVC2 3tire 지원, 확장성
[ 스프링 부트 ]
    1. 스프링 프레임워크를 빠르게  사용할수 있도록 자동설정기반의 스타터 프레임워크
    2. 활용처 : 복잡한 설정을 제공 받는다.
    3. 특징 : ( 스프링부트 안에 스프링 포함 )
    4. 웹서버 : 내장 Tomcat 제공한다. Tomcat 이란? 자바 회사에서 만든 웹개발 관련 라이브러리 포함한 소프트웨어
        Starting Servlet engine: [Apache Tomcat/10.1.43]
[ 그레이들 ]
    1. 정의 : 그레이들은 자바 기반의 빌드 자동화 소프트웨어
    2. 특징 : 의존성 관리, 배포, 패키징 을 쉽게 코드 한줄로 자동 처리 해준다. ( 단 한국 라이브러리 없다 )
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링부트 웹 설치
            runtimeOnly 'com.mysql:mysql-connector-j' // MYSQL JDBC 라이브러리 설치
        }
[ 코드 ] : 명령어
[ 라이브러리 ] : 명령어들을 집합(메소드)해서 .jar 확장자로 만든 집합 , 미리 만들어진 코드 , 예] 도구 제공
[ 프레임워크 ] : 라이브러리 + 개발에 필요한 환경설정 까지, 예] 개발 틀 제공

[ REST ] : 웹의 자원을 관리하는 아키텍처/구조
    1. 자원(Resources) , 행동(Method) , 표현
    2. HTTP 프로토콜(규약) 이용한 클라이언트 와 서버 간의 일관성 통신 구성
[ REST API ] : REST 아키텍처에 따른 API
    1. REST 기반의 웹서비스 인터페이스 구축
    2. HTTP 요청을 통해 자원(데이터)을 C R U D 할 수 있도록 제공
[ RESTful API ]
    1. REST API 의 아키텍처를 잘 사용하는지 대한 개념
    2. 조건 :
        1. 일관성 : "/member/XXXX" , "/board/XXXX"
        2. 적절한 HTTP METHOD : POST(등록) , GET(조회) , PUT(수정) , DELETE(삭제)
        3. 무상태성
        4. 응답 타입은 JSON/ XML 제공